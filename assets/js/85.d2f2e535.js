(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{348:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"wrapper-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wrapper-class"}},[t._v("#")]),t._v(" Wrapper Class")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("정의")]),t._v(" "),a("p",[t._v("기본 자료타입(primitive type)을 객체로 다루기 위해서 사용하는 클래스들을 래퍼 클래스(wrapper class)라고 합니다.")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/50647845/181657587-33c905b2-e44e-4401-a2b0-496183db8dd7.png",alt:"image"}})]),t._v(" "),a("ul",[a("li",[t._v("자바는 모든 기본타입(primitive type)은 값을 갖는 객체를 생성할 수 있습니다.")]),t._v(" "),a("li",[t._v("이런 객체를 포장 객체라고도 하는데 그 이유는 기본 타입의 값을 내부에 두고 포장하기 때문입니다.")]),t._v(" "),a("li",[t._v("불변 객체이기 때문에 값에 대한 변경은 불가능하고 새로운 값(객체)의 할당이나 참조만 가능합니다.")])]),t._v(" "),a("h2",{attrs:{id:"박싱-boxing-과-언박싱-unboxing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#박싱-boxing-과-언박싱-unboxing"}},[t._v("#")]),t._v(" 박싱(Boxing)과 언박싱(UnBoxing)")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("정의")]),t._v(" "),a("p",[t._v("기본 타입의 값을 포장 객체로 만드는 과정을 "),a("code",[t._v("박싱")]),t._v("이라고 하고 반대로 포장객체에서 기본타입의 값을 얻어내는 과정을 "),a("code",[t._v("언박싱")]),t._v("이라고 합니다.")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/50647845/181657688-7461532f-dbb0-459d-8741-37b62e54032f.png",alt:"image"}})]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sample")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 박싱")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("intValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//언박싱")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"자동-박싱-autoboxing-과-자동-언박싱-autounboxing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#자동-박싱-autoboxing-과-자동-언박싱-autounboxing"}},[t._v("#")]),t._v(" 자동 박싱(AutoBoxing)과 자동 언박싱(AutoUnBoxing)")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sample")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 자동 박싱")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//자동 언박싱")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("자동 박싱의 포장 클래스 타입에 기본값이 대입될 경우에 발생합니다.")]),t._v(" "),a("li",[t._v("JDK 1.5부터 지원합니다.")])]),t._v(" "),a("h2",{attrs:{id:"wrapper-class를-사용하는-이유"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wrapper-class를-사용하는-이유"}},[t._v("#")]),t._v(" Wrapper Class를 사용하는 이유")]),t._v(" "),a("ul",[a("li",[t._v("객체로 저장해야 할 경우")]),t._v(" "),a("li",[t._v("매개변수로 객체가 요구될 경우(ex. 제네릭, Collection의 타입)")]),t._v(" "),a("li",[t._v("객체 간의 비교가 필요할 경우")]),t._v(" "),a("li",[t._v("제네릭이나 컬렉션에서 사용할 경우, 기본형을 쓸 수 없기 때문에 이를 Wrapping한 형태를 사용해야 합니다.")]),t._v(" "),a("li",[t._v("기본 자료형의 값을 단순히 값으로만 사용하지 않고 그 값에 대한 메서드를 사용 혹은 null값을 이용하기 위해 사용합니다.")]),t._v(" "),a("li",[t._v("Integer Cache라는 곳에서 캐시에 이미 생성한 것이 있으면, 바로 반환하고 아니면 새로 생성합니다.")])]),t._v(" "),a("h2",{attrs:{id:"integer의-값-비교하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#integer의-값-비교하기"}},[t._v("#")]),t._v(" Integer의 값 비교하기")]),t._v(" "),a("p",[t._v("Integer.valueOf(127) == Integer.valueOf(127)는 같을까요?")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Integer 클래스는 내부에서 integer 사용을 위해 IntegerCache를 관리합니다.")]),t._v(" "),a("li",[t._v("이 캐시의 기본 범위는 -128 ~ 127이며, Integer.valueOf() 메소드는 캐시 범위에 해당하는 objects를 리턴합니다.")]),t._v(" "),a("li",[t._v("그렇기에, a와 b 둘다, 같은 object 를 가리키게 되므로, a == b가 true가 됩니다.")]),t._v(" "),a("li",[t._v("Integer.IntegerCache 처럼 ByteCache, ShortCache, LongCache, CharacterCache도 각각 존재합니다.\n"),a("ul",[a("li",[t._v("Byte, Short, Long 타입은 -127부터 127까지의(-127<=, <=127) 고정된 캐시값을 가집니다.")]),t._v(" "),a("li",[t._v("하지만, Character는 0부터 127(0<=, <=127)까지의 고정된 캐시값을 가집니다.")])])])]),t._v(" "),a("h3",{attrs:{id:"참고자료"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#참고자료"}},[t._v("#")]),t._v(" 참고자료")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://coding-factory.tistory.com/547",target:"_blank",rel:"noopener noreferrer"}},[t._v("coding-factory:tistory"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://velog.io/@ksh9409255/%EB%9E%98%ED%8D%BCwrapper-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90-%EB%8C%80%ED%95%B4...%EC%9E%91%EC%84%B1%EC%A4%91",target:"_blank",rel:"noopener noreferrer"}},[t._v("ksh9409255:velog"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/WooVictory/Ready-For-Tech-Interview/blob/master/Java/%5BJava%5D%20Wrapper%20Class.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("WooVictory:github"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://meetup.toast.com/posts/185",target:"_blank",rel:"noopener noreferrer"}},[t._v("meetup.toast"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);