(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{304:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"벡터-vector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#벡터-vector"}},[t._v("#")]),t._v(" 벡터(Vector)")]),t._v(" "),s("h2",{attrs:{id:"벡터란-무엇인가요"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#벡터란-무엇인가요"}},[t._v("#")]),t._v(" 벡터란 무엇인가요?")]),t._v(" "),s("p",[t._v("벡터는 동적으로 요소를 할당할 수 있는 동적배열입니다.\n또한 중복을 허용하고 순서가 있고 랜덤 접근이 가능합니다.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("벡터와 ArrayList의 차이점")]),t._v(" "),s("p",[t._v("Vector는 동기화 된 메소드로 구성되어 있습니다."),s("br"),t._v("\n따라서 멀티 스레드가 동시에 이 메소드들을 실행할 수 없어\n멀티 스레드 환경에서 안전하게 객체를 추가하고 삭제할 수 있습니다.")])]),t._v(" "),s("h2",{attrs:{id:"벡터의-사용법"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#벡터의-사용법"}},[t._v("#")]),t._v(" 벡터의 사용법")]),t._v(" "),s("ul",[s("li",[t._v("Vector 선언")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vector")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vector")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vector")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 타입설정 가능")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Vector 사용 함수들")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 기본적으로 맨 뒤에 데이터 추가")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hi"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index 1 에 데이터 추가")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Apple"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index 2 에 있는 값 변경")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index 1 에 있는 값 삭제")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeAllElements")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 모든 데이터 삭제")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 모든 데이터 삭제")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//벡터의 현재 사용한 크기 구하기")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("capacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//벡터의 총 용량 구하기")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index 1 에 있는 값 출력")]),t._v("\n")])])]),s("h2",{attrs:{id:"벡터의-시간-복잡도는-얼마나-되나요"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#벡터의-시간-복잡도는-얼마나-되나요"}},[t._v("#")]),t._v(" 벡터의 시간 복잡도는 얼마나 되나요?")]),t._v(" "),s("ul",[s("li",[t._v("탐색, 맨 뒤의 요소를 삭제 및 삽입 : O(1)")]),t._v(" "),s("li",[t._v("맨 뒤나 맨 앞이 아닌 요소를 삭제 및 삽입 : O(n)")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("맨 뒤의 요소를 삽입시")]),t._v(" "),s("p",[t._v("뒤에서부터 삽입하는 push_back()의 경우 시간복잡도가 O(1)이라고 했습니다."),s("br"),t._v("\n실제로는 '2의 제곱승 +1' 마다 크기를 2배로 늘리기 때문에, 평균시간복잡도가 O(3)이 나옵니다."),s("br"),t._v("\n1이라는 상수 시간보다는 크지만, 상수 시간에 가까운 amortized 복잡도를 가지기 때문에 O(1)이라고 합니다.")])]),t._v(" "),s("h2",{attrs:{id:"벡터의-장점은-무엇인가요"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#벡터의-장점은-무엇인가요"}},[t._v("#")]),t._v(" 벡터의 장점은 무엇인가요?")]),t._v(" "),s("ul",[s("li",[t._v("항상 동기화가 되어있습니다. (장점이자 단점입니다.)")]),t._v(" "),s("li",[t._v("Collection 프레임워크에 없는 메서드들을 사용할 수 있습니다.")])]),t._v(" "),s("h2",{attrs:{id:"벡터의-단점은-무엇이-있나요"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#벡터의-단점은-무엇이-있나요"}},[t._v("#")]),t._v(" 벡터의 단점은 무엇이 있나요?")]),t._v(" "),s("ul",[s("li",[t._v("Arraylist에 비해 추가, 검색, 삭제의 성능이 떨어집니다.")])]),t._v(" "),s("h3",{attrs:{id:"참고자료"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#참고자료"}},[t._v("#")]),t._v(" 참고자료")]),t._v(" "),s("p",[t._v("출처: 주홍철."),s("em",[t._v("면접을 위한 CS 전공지식 노트")]),t._v(".서울:길벗,2022."),s("br"),t._v("\n출처: https://crazykim2.tistory.com/570")])])}),[],!1,null,null,null);s.default=e.exports}}]);